
=== Edge cases ===
Empty template: 'Template(strings=('',), interpolations=())'
Empty strings: [Interpolation(1, 'a', None, ''), Interpolation(2, 'b', None, '')]
Adjacent: 'Template(strings=('', '', '', ''), interpolations=(Interpolation(1, '1', None, ''), Interpolation(2, '2', None, ''), Interpolation(3, '3', None, '')))'
Single iter: ['only']
Self+self: 'Template(strings=('testtest',), interpolations=())'

=== Values property ===

=== Additional coverage tests ===
String literal: Template(strings=('', ''), interpolations=(Interpolation('hello', "'hello'", None, ''),))
Raw path strings: ('Path: ', '\\n'), value=/usr/local/bin
Raw regex strings: ('Regex: \\\\d+', ''), value=42
String expr: 'Template(strings=('', ''), interpolations=(Interpolation('test', '"test"', None, ''),))'
Re-raised exception: Special error
Too many interpolations: SyntaxError
Large template: SyntaxError
Triple quoted: 'Template(strings=('Triple "quoted" string',), interpolations=())'
Raw triple: 'Template(strings=('Raw triple\\n', ''), interpolations=(Interpolation(42, '42', None, ''),))'
Complex concat: strings=('a', 'bc', 'd', 'e'), values=(1, 2, 3)
Empty concat: 'Template(strings=('test', ''), interpolations=(Interpolation(42, '42', None, ''),))'
Self interp concat: values=(1, 1)
Lonely string: SyntaxError
Empty t-string: 'Template(strings=('',), interpolations=())'

=== Inline template literal tests ===

=== High byte handling ===
High bytes: len=5, first=0x7f, last=0xff
Octal high bytes: OK, len=3

=== Debug specifier tests ===

=== Deep nesting test ===
Deep nesting error: RuntimeError

=== Template + non-string object ===

=== Trailing whitespace in expression ===
Trailing whitespace: OK

=== Deep nesting test ===

=== Single closing brace ===
Single }: SyntaxError - t-string: single '}' is not allowed

=== Escape in string within interpolation ===
